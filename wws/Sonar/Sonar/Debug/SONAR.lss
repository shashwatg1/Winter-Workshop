
SONAR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  00000462  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000462  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000030  00000000  00000000  00000492  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000214  00000000  00000000  000004c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000145  00000000  00000000  000006d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000179  00000000  00000000  0000081b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000006c  00000000  00000000  00000994  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001aa  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000ec  00000000  00000000  00000baa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00000c96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_2>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__vector_9>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include <util/delay.h>
int time = 0;
int ctr = 0;
int main(void)
{
    MCUCR = (1<<ISC11);
  7c:	88 e0       	ldi	r24, 0x08	; 8
  7e:	85 bf       	out	0x35, r24	; 53
    GICR = (1<<INT1);
  80:	80 e8       	ldi	r24, 0x80	; 128
  82:	8b bf       	out	0x3b, r24	; 59
	TCCR0 = (1<<CS02)|(1<<CS00);
  84:	85 e0       	ldi	r24, 0x05	; 5
  86:	83 bf       	out	0x33, r24	; 51
	DDRD = setit0;
  88:	11 ba       	out	0x11, r1	; 17
	DDRB = setit1;
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	87 bb       	out	0x17, r24	; 23
	DDRA = setit1;
  8e:	8a bb       	out	0x1a, r24	; 26
	PORTD = setit1;
  90:	82 bb       	out	0x12, r24	; 18
	PORTB = setit0;
  92:	18 ba       	out	0x18, r1	; 24
	PORTA = setit0;
  94:	1b ba       	out	0x1b, r1	; 27
	while(1)
    {
        sei();
		PORTA^=(1<<PA0);
  96:	c1 e0       	ldi	r28, 0x01	; 1
		_delay_us(10);
		PORTA^=(1<<PA0);
		TCNT0=0;
		_delay_ms(100);
		cli();
		long a = time + 255*ctr;
  98:	df ef       	ldi	r29, 0xFF	; 255
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
		}
		else if (dist>=1.0)
		{
			PORTB=(1<<PB0)|(1<<PB1);	
  9a:	0f 2e       	mov	r0, r31
  9c:	f3 e0       	ldi	r31, 0x03	; 3
  9e:	bf 2e       	mov	r11, r31
  a0:	f0 2d       	mov	r31, r0
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
		}
		else if (dist>=2.0)
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
  a2:	07 e0       	ldi	r16, 0x07	; 7
		long a = time + 255*ctr;
		float time_f = a*0.000064;
		float dist = time_f*170;
		if (dist>=3.0)
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
  a4:	1f e0       	ldi	r17, 0x0F	; 15
	PORTD = setit1;
	PORTB = setit0;
	PORTA = setit0;
	while(1)
    {
        sei();
  a6:	78 94       	sei
		PORTA^=(1<<PA0);
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	8c 27       	eor	r24, r28
  ac:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	25 e3       	ldi	r18, 0x35	; 53
  b0:	2a 95       	dec	r18
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x34>
  b4:	00 00       	nop
		_delay_us(10);
		PORTA^=(1<<PA0);
  b6:	8b b3       	in	r24, 0x1b	; 27
  b8:	8c 27       	eor	r24, r28
  ba:	8b bb       	out	0x1b, r24	; 27
		TCNT0=0;
  bc:	12 be       	out	0x32, r1	; 50
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	91 ee       	ldi	r25, 0xE1	; 225
  c2:	24 e0       	ldi	r18, 0x04	; 4
  c4:	81 50       	subi	r24, 0x01	; 1
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	20 40       	sbci	r18, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x48>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x52>
  ce:	00 00       	nop
		_delay_ms(100);
		cli();
  d0:	f8 94       	cli
		long a = time + 255*ctr;
  d2:	80 91 60 00 	lds	r24, 0x0060
  d6:	90 91 61 00 	lds	r25, 0x0061
  da:	d8 9f       	mul	r29, r24
  dc:	b0 01       	movw	r22, r0
  de:	d9 9f       	mul	r29, r25
  e0:	70 0d       	add	r23, r0
  e2:	11 24       	eor	r1, r1
  e4:	80 91 62 00 	lds	r24, 0x0062
  e8:	90 91 63 00 	lds	r25, 0x0063
  ec:	68 0f       	add	r22, r24
  ee:	79 1f       	adc	r23, r25
		float time_f = a*0.000064;
  f0:	88 27       	eor	r24, r24
  f2:	77 fd       	sbrc	r23, 7
  f4:	80 95       	com	r24
  f6:	98 2f       	mov	r25, r24
  f8:	0e 94 de 00 	call	0x1bc	; 0x1bc <__floatsisf>
  fc:	2d eb       	ldi	r18, 0xBD	; 189
  fe:	37 e3       	ldi	r19, 0x37	; 55
 100:	46 e8       	ldi	r20, 0x86	; 134
 102:	58 e3       	ldi	r21, 0x38	; 56
 104:	0e 94 1d 01 	call	0x23a	; 0x23a <__mulsf3>
		float dist = time_f*170;
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	4a e2       	ldi	r20, 0x2A	; 42
 10e:	53 e4       	ldi	r21, 0x43	; 67
 110:	0e 94 1d 01 	call	0x23a	; 0x23a <__mulsf3>
 114:	6b 01       	movw	r12, r22
 116:	7c 01       	movw	r14, r24
		if (dist>=3.0)
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	40 e4       	ldi	r20, 0x40	; 64
 11e:	50 e4       	ldi	r21, 0x40	; 64
 120:	0e 94 19 01 	call	0x232	; 0x232 <__gesf2>
 124:	88 23       	and	r24, r24
 126:	14 f0       	brlt	.+4      	; 0x12c <main+0xb0>
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
 128:	18 bb       	out	0x18, r17	; 24
 12a:	bd cf       	rjmp	.-134    	; 0xa6 <main+0x2a>
		}
		else if (dist>=2.0)
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	40 e0       	ldi	r20, 0x00	; 0
 132:	50 e4       	ldi	r21, 0x40	; 64
 134:	c7 01       	movw	r24, r14
 136:	b6 01       	movw	r22, r12
 138:	0e 94 19 01 	call	0x232	; 0x232 <__gesf2>
 13c:	88 23       	and	r24, r24
 13e:	14 f0       	brlt	.+4      	; 0x144 <main+0xc8>
		{
			PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
 140:	08 bb       	out	0x18, r16	; 24
 142:	b1 cf       	rjmp	.-158    	; 0xa6 <main+0x2a>
		}
		else if (dist>=1.0)
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	40 e8       	ldi	r20, 0x80	; 128
 14a:	5f e3       	ldi	r21, 0x3F	; 63
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	0e 94 19 01 	call	0x232	; 0x232 <__gesf2>
 154:	88 23       	and	r24, r24
 156:	14 f0       	brlt	.+4      	; 0x15c <main+0xe0>
		{
			PORTB=(1<<PB0)|(1<<PB1);	
 158:	b8 ba       	out	0x18, r11	; 24
 15a:	a5 cf       	rjmp	.-182    	; 0xa6 <main+0x2a>
		}
		else
		{
			PORTB=(1<<PB0);
 15c:	c8 bb       	out	0x18, r28	; 24
 15e:	a3 cf       	rjmp	.-186    	; 0xa6 <main+0x2a>

00000160 <__vector_2>:
		}
	}
}
ISR(INT1_vect)
{
 160:	1f 92       	push	r1
 162:	0f 92       	push	r0
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	0f 92       	push	r0
 168:	11 24       	eor	r1, r1
 16a:	8f 93       	push	r24
 16c:	9f 93       	push	r25
		time = TCNT0;
 16e:	82 b7       	in	r24, 0x32	; 50
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 63 00 	sts	0x0063, r25
 176:	80 93 62 00 	sts	0x0062, r24
}
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <__vector_9>:
ISR(TIMER0_OVF_vect)
{
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	8f 93       	push	r24
 194:	9f 93       	push	r25
	ctr++;
 196:	80 91 60 00 	lds	r24, 0x0060
 19a:	90 91 61 00 	lds	r25, 0x0061
 19e:	01 96       	adiw	r24, 0x01	; 1
 1a0:	90 93 61 00 	sts	0x0061, r25
 1a4:	80 93 60 00 	sts	0x0060, r24
	TCNT0 = 0;
 1a8:	12 be       	out	0x32, r1	; 50
 1aa:	9f 91       	pop	r25
 1ac:	8f 91       	pop	r24
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <__floatunsisf>:
 1b8:	e8 94       	clt
 1ba:	09 c0       	rjmp	.+18     	; 0x1ce <__floatsisf+0x12>

000001bc <__floatsisf>:
 1bc:	97 fb       	bst	r25, 7
 1be:	3e f4       	brtc	.+14     	; 0x1ce <__floatsisf+0x12>
 1c0:	90 95       	com	r25
 1c2:	80 95       	com	r24
 1c4:	70 95       	com	r23
 1c6:	61 95       	neg	r22
 1c8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ca:	8f 4f       	sbci	r24, 0xFF	; 255
 1cc:	9f 4f       	sbci	r25, 0xFF	; 255
 1ce:	99 23       	and	r25, r25
 1d0:	a9 f0       	breq	.+42     	; 0x1fc <__floatsisf+0x40>
 1d2:	f9 2f       	mov	r31, r25
 1d4:	96 e9       	ldi	r25, 0x96	; 150
 1d6:	bb 27       	eor	r27, r27
 1d8:	93 95       	inc	r25
 1da:	f6 95       	lsr	r31
 1dc:	87 95       	ror	r24
 1de:	77 95       	ror	r23
 1e0:	67 95       	ror	r22
 1e2:	b7 95       	ror	r27
 1e4:	f1 11       	cpse	r31, r1
 1e6:	f8 cf       	rjmp	.-16     	; 0x1d8 <__floatsisf+0x1c>
 1e8:	fa f4       	brpl	.+62     	; 0x228 <__floatsisf+0x6c>
 1ea:	bb 0f       	add	r27, r27
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <__floatsisf+0x36>
 1ee:	60 ff       	sbrs	r22, 0
 1f0:	1b c0       	rjmp	.+54     	; 0x228 <__floatsisf+0x6c>
 1f2:	6f 5f       	subi	r22, 0xFF	; 255
 1f4:	7f 4f       	sbci	r23, 0xFF	; 255
 1f6:	8f 4f       	sbci	r24, 0xFF	; 255
 1f8:	9f 4f       	sbci	r25, 0xFF	; 255
 1fa:	16 c0       	rjmp	.+44     	; 0x228 <__floatsisf+0x6c>
 1fc:	88 23       	and	r24, r24
 1fe:	11 f0       	breq	.+4      	; 0x204 <__floatsisf+0x48>
 200:	96 e9       	ldi	r25, 0x96	; 150
 202:	11 c0       	rjmp	.+34     	; 0x226 <__floatsisf+0x6a>
 204:	77 23       	and	r23, r23
 206:	21 f0       	breq	.+8      	; 0x210 <__floatsisf+0x54>
 208:	9e e8       	ldi	r25, 0x8E	; 142
 20a:	87 2f       	mov	r24, r23
 20c:	76 2f       	mov	r23, r22
 20e:	05 c0       	rjmp	.+10     	; 0x21a <__floatsisf+0x5e>
 210:	66 23       	and	r22, r22
 212:	71 f0       	breq	.+28     	; 0x230 <__floatsisf+0x74>
 214:	96 e8       	ldi	r25, 0x86	; 134
 216:	86 2f       	mov	r24, r22
 218:	70 e0       	ldi	r23, 0x00	; 0
 21a:	60 e0       	ldi	r22, 0x00	; 0
 21c:	2a f0       	brmi	.+10     	; 0x228 <__floatsisf+0x6c>
 21e:	9a 95       	dec	r25
 220:	66 0f       	add	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	88 1f       	adc	r24, r24
 226:	da f7       	brpl	.-10     	; 0x21e <__floatsisf+0x62>
 228:	88 0f       	add	r24, r24
 22a:	96 95       	lsr	r25
 22c:	87 95       	ror	r24
 22e:	97 f9       	bld	r25, 7
 230:	08 95       	ret

00000232 <__gesf2>:
 232:	66 d0       	rcall	.+204    	; 0x300 <__fp_cmp>
 234:	08 f4       	brcc	.+2      	; 0x238 <__gesf2+0x6>
 236:	8f ef       	ldi	r24, 0xFF	; 255
 238:	08 95       	ret

0000023a <__mulsf3>:
 23a:	0b d0       	rcall	.+22     	; 0x252 <__mulsf3x>
 23c:	9c c0       	rjmp	.+312    	; 0x376 <__fp_round>
 23e:	8d d0       	rcall	.+282    	; 0x35a <__fp_pscA>
 240:	28 f0       	brcs	.+10     	; 0x24c <__mulsf3+0x12>
 242:	92 d0       	rcall	.+292    	; 0x368 <__fp_pscB>
 244:	18 f0       	brcs	.+6      	; 0x24c <__mulsf3+0x12>
 246:	95 23       	and	r25, r21
 248:	09 f0       	breq	.+2      	; 0x24c <__mulsf3+0x12>
 24a:	7e c0       	rjmp	.+252    	; 0x348 <__fp_inf>
 24c:	83 c0       	rjmp	.+262    	; 0x354 <__fp_nan>
 24e:	11 24       	eor	r1, r1
 250:	c6 c0       	rjmp	.+396    	; 0x3de <__fp_szero>

00000252 <__mulsf3x>:
 252:	a2 d0       	rcall	.+324    	; 0x398 <__fp_split3>
 254:	a0 f3       	brcs	.-24     	; 0x23e <__mulsf3+0x4>

00000256 <__mulsf3_pse>:
 256:	95 9f       	mul	r25, r21
 258:	d1 f3       	breq	.-12     	; 0x24e <__mulsf3+0x14>
 25a:	95 0f       	add	r25, r21
 25c:	50 e0       	ldi	r21, 0x00	; 0
 25e:	55 1f       	adc	r21, r21
 260:	62 9f       	mul	r22, r18
 262:	f0 01       	movw	r30, r0
 264:	72 9f       	mul	r23, r18
 266:	bb 27       	eor	r27, r27
 268:	f0 0d       	add	r31, r0
 26a:	b1 1d       	adc	r27, r1
 26c:	63 9f       	mul	r22, r19
 26e:	aa 27       	eor	r26, r26
 270:	f0 0d       	add	r31, r0
 272:	b1 1d       	adc	r27, r1
 274:	aa 1f       	adc	r26, r26
 276:	64 9f       	mul	r22, r20
 278:	66 27       	eor	r22, r22
 27a:	b0 0d       	add	r27, r0
 27c:	a1 1d       	adc	r26, r1
 27e:	66 1f       	adc	r22, r22
 280:	82 9f       	mul	r24, r18
 282:	22 27       	eor	r18, r18
 284:	b0 0d       	add	r27, r0
 286:	a1 1d       	adc	r26, r1
 288:	62 1f       	adc	r22, r18
 28a:	73 9f       	mul	r23, r19
 28c:	b0 0d       	add	r27, r0
 28e:	a1 1d       	adc	r26, r1
 290:	62 1f       	adc	r22, r18
 292:	83 9f       	mul	r24, r19
 294:	a0 0d       	add	r26, r0
 296:	61 1d       	adc	r22, r1
 298:	22 1f       	adc	r18, r18
 29a:	74 9f       	mul	r23, r20
 29c:	33 27       	eor	r19, r19
 29e:	a0 0d       	add	r26, r0
 2a0:	61 1d       	adc	r22, r1
 2a2:	23 1f       	adc	r18, r19
 2a4:	84 9f       	mul	r24, r20
 2a6:	60 0d       	add	r22, r0
 2a8:	21 1d       	adc	r18, r1
 2aa:	82 2f       	mov	r24, r18
 2ac:	76 2f       	mov	r23, r22
 2ae:	6a 2f       	mov	r22, r26
 2b0:	11 24       	eor	r1, r1
 2b2:	9f 57       	subi	r25, 0x7F	; 127
 2b4:	50 40       	sbci	r21, 0x00	; 0
 2b6:	8a f0       	brmi	.+34     	; 0x2da <__mulsf3_pse+0x84>
 2b8:	e1 f0       	breq	.+56     	; 0x2f2 <__mulsf3_pse+0x9c>
 2ba:	88 23       	and	r24, r24
 2bc:	4a f0       	brmi	.+18     	; 0x2d0 <__mulsf3_pse+0x7a>
 2be:	ee 0f       	add	r30, r30
 2c0:	ff 1f       	adc	r31, r31
 2c2:	bb 1f       	adc	r27, r27
 2c4:	66 1f       	adc	r22, r22
 2c6:	77 1f       	adc	r23, r23
 2c8:	88 1f       	adc	r24, r24
 2ca:	91 50       	subi	r25, 0x01	; 1
 2cc:	50 40       	sbci	r21, 0x00	; 0
 2ce:	a9 f7       	brne	.-22     	; 0x2ba <__mulsf3_pse+0x64>
 2d0:	9e 3f       	cpi	r25, 0xFE	; 254
 2d2:	51 05       	cpc	r21, r1
 2d4:	70 f0       	brcs	.+28     	; 0x2f2 <__mulsf3_pse+0x9c>
 2d6:	38 c0       	rjmp	.+112    	; 0x348 <__fp_inf>
 2d8:	82 c0       	rjmp	.+260    	; 0x3de <__fp_szero>
 2da:	5f 3f       	cpi	r21, 0xFF	; 255
 2dc:	ec f3       	brlt	.-6      	; 0x2d8 <__mulsf3_pse+0x82>
 2de:	98 3e       	cpi	r25, 0xE8	; 232
 2e0:	dc f3       	brlt	.-10     	; 0x2d8 <__mulsf3_pse+0x82>
 2e2:	86 95       	lsr	r24
 2e4:	77 95       	ror	r23
 2e6:	67 95       	ror	r22
 2e8:	b7 95       	ror	r27
 2ea:	f7 95       	ror	r31
 2ec:	e7 95       	ror	r30
 2ee:	9f 5f       	subi	r25, 0xFF	; 255
 2f0:	c1 f7       	brne	.-16     	; 0x2e2 <__mulsf3_pse+0x8c>
 2f2:	fe 2b       	or	r31, r30
 2f4:	88 0f       	add	r24, r24
 2f6:	91 1d       	adc	r25, r1
 2f8:	96 95       	lsr	r25
 2fa:	87 95       	ror	r24
 2fc:	97 f9       	bld	r25, 7
 2fe:	08 95       	ret

00000300 <__fp_cmp>:
 300:	99 0f       	add	r25, r25
 302:	00 08       	sbc	r0, r0
 304:	55 0f       	add	r21, r21
 306:	aa 0b       	sbc	r26, r26
 308:	e0 e8       	ldi	r30, 0x80	; 128
 30a:	fe ef       	ldi	r31, 0xFE	; 254
 30c:	16 16       	cp	r1, r22
 30e:	17 06       	cpc	r1, r23
 310:	e8 07       	cpc	r30, r24
 312:	f9 07       	cpc	r31, r25
 314:	c0 f0       	brcs	.+48     	; 0x346 <__fp_cmp+0x46>
 316:	12 16       	cp	r1, r18
 318:	13 06       	cpc	r1, r19
 31a:	e4 07       	cpc	r30, r20
 31c:	f5 07       	cpc	r31, r21
 31e:	98 f0       	brcs	.+38     	; 0x346 <__fp_cmp+0x46>
 320:	62 1b       	sub	r22, r18
 322:	73 0b       	sbc	r23, r19
 324:	84 0b       	sbc	r24, r20
 326:	95 0b       	sbc	r25, r21
 328:	39 f4       	brne	.+14     	; 0x338 <__fp_cmp+0x38>
 32a:	0a 26       	eor	r0, r26
 32c:	61 f0       	breq	.+24     	; 0x346 <__fp_cmp+0x46>
 32e:	23 2b       	or	r18, r19
 330:	24 2b       	or	r18, r20
 332:	25 2b       	or	r18, r21
 334:	21 f4       	brne	.+8      	; 0x33e <__fp_cmp+0x3e>
 336:	08 95       	ret
 338:	0a 26       	eor	r0, r26
 33a:	09 f4       	brne	.+2      	; 0x33e <__fp_cmp+0x3e>
 33c:	a1 40       	sbci	r26, 0x01	; 1
 33e:	a6 95       	lsr	r26
 340:	8f ef       	ldi	r24, 0xFF	; 255
 342:	81 1d       	adc	r24, r1
 344:	81 1d       	adc	r24, r1
 346:	08 95       	ret

00000348 <__fp_inf>:
 348:	97 f9       	bld	r25, 7
 34a:	9f 67       	ori	r25, 0x7F	; 127
 34c:	80 e8       	ldi	r24, 0x80	; 128
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	08 95       	ret

00000354 <__fp_nan>:
 354:	9f ef       	ldi	r25, 0xFF	; 255
 356:	80 ec       	ldi	r24, 0xC0	; 192
 358:	08 95       	ret

0000035a <__fp_pscA>:
 35a:	00 24       	eor	r0, r0
 35c:	0a 94       	dec	r0
 35e:	16 16       	cp	r1, r22
 360:	17 06       	cpc	r1, r23
 362:	18 06       	cpc	r1, r24
 364:	09 06       	cpc	r0, r25
 366:	08 95       	ret

00000368 <__fp_pscB>:
 368:	00 24       	eor	r0, r0
 36a:	0a 94       	dec	r0
 36c:	12 16       	cp	r1, r18
 36e:	13 06       	cpc	r1, r19
 370:	14 06       	cpc	r1, r20
 372:	05 06       	cpc	r0, r21
 374:	08 95       	ret

00000376 <__fp_round>:
 376:	09 2e       	mov	r0, r25
 378:	03 94       	inc	r0
 37a:	00 0c       	add	r0, r0
 37c:	11 f4       	brne	.+4      	; 0x382 <__fp_round+0xc>
 37e:	88 23       	and	r24, r24
 380:	52 f0       	brmi	.+20     	; 0x396 <__fp_round+0x20>
 382:	bb 0f       	add	r27, r27
 384:	40 f4       	brcc	.+16     	; 0x396 <__fp_round+0x20>
 386:	bf 2b       	or	r27, r31
 388:	11 f4       	brne	.+4      	; 0x38e <__fp_round+0x18>
 38a:	60 ff       	sbrs	r22, 0
 38c:	04 c0       	rjmp	.+8      	; 0x396 <__fp_round+0x20>
 38e:	6f 5f       	subi	r22, 0xFF	; 255
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	8f 4f       	sbci	r24, 0xFF	; 255
 394:	9f 4f       	sbci	r25, 0xFF	; 255
 396:	08 95       	ret

00000398 <__fp_split3>:
 398:	57 fd       	sbrc	r21, 7
 39a:	90 58       	subi	r25, 0x80	; 128
 39c:	44 0f       	add	r20, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	59 f0       	breq	.+22     	; 0x3b8 <__fp_splitA+0x10>
 3a2:	5f 3f       	cpi	r21, 0xFF	; 255
 3a4:	71 f0       	breq	.+28     	; 0x3c2 <__fp_splitA+0x1a>
 3a6:	47 95       	ror	r20

000003a8 <__fp_splitA>:
 3a8:	88 0f       	add	r24, r24
 3aa:	97 fb       	bst	r25, 7
 3ac:	99 1f       	adc	r25, r25
 3ae:	61 f0       	breq	.+24     	; 0x3c8 <__fp_splitA+0x20>
 3b0:	9f 3f       	cpi	r25, 0xFF	; 255
 3b2:	79 f0       	breq	.+30     	; 0x3d2 <__fp_splitA+0x2a>
 3b4:	87 95       	ror	r24
 3b6:	08 95       	ret
 3b8:	12 16       	cp	r1, r18
 3ba:	13 06       	cpc	r1, r19
 3bc:	14 06       	cpc	r1, r20
 3be:	55 1f       	adc	r21, r21
 3c0:	f2 cf       	rjmp	.-28     	; 0x3a6 <__fp_split3+0xe>
 3c2:	46 95       	lsr	r20
 3c4:	f1 df       	rcall	.-30     	; 0x3a8 <__fp_splitA>
 3c6:	08 c0       	rjmp	.+16     	; 0x3d8 <__fp_splitA+0x30>
 3c8:	16 16       	cp	r1, r22
 3ca:	17 06       	cpc	r1, r23
 3cc:	18 06       	cpc	r1, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	f1 cf       	rjmp	.-30     	; 0x3b4 <__fp_splitA+0xc>
 3d2:	86 95       	lsr	r24
 3d4:	71 05       	cpc	r23, r1
 3d6:	61 05       	cpc	r22, r1
 3d8:	08 94       	sec
 3da:	08 95       	ret

000003dc <__fp_zero>:
 3dc:	e8 94       	clt

000003de <__fp_szero>:
 3de:	bb 27       	eor	r27, r27
 3e0:	66 27       	eor	r22, r22
 3e2:	77 27       	eor	r23, r23
 3e4:	cb 01       	movw	r24, r22
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <_exit>:
 3ea:	f8 94       	cli

000003ec <__stop_program>:
 3ec:	ff cf       	rjmp	.-2      	; 0x3ec <__stop_program>

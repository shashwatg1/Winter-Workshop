
timer2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000128  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000880  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000340  00000000  00000000  00000900  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000af  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000026b  00000000  00000000  00000cef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000f5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000093  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000002a  00000000  00000000  00001013  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  0000103d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 67 00 	jmp	0xce	; 0xce <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
int main(void)


{
	long int cnt;
	TCNT0=0;
  92:	12 be       	out	0x32, r1	; 50
	TCCR0|=(1<<CS00)|(1<<CS02);
  94:	83 b7       	in	r24, 0x33	; 51
  96:	85 60       	ori	r24, 0x05	; 5
  98:	83 bf       	out	0x33, r24	; 51
	DDRB=~0;
  9a:	8f ef       	ldi	r24, 0xFF	; 255
  9c:	87 bb       	out	0x17, r24	; 23
#include <util/delay.h>

int main(void)


{
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	50 e0       	ldi	r21, 0x00	; 0
  a2:	ba 01       	movw	r22, r20
			
					
		if(cnt==61)	
		{
			int a=TCNT0;
			PORTB^=(1<<3);
  a4:	38 e0       	ldi	r19, 0x08	; 8
#include <util/delay.h>

int main(void)


{
  a6:	db 01       	movw	r26, r22
  a8:	ca 01       	movw	r24, r20
	TCNT0=0;
	TCCR0|=(1<<CS00)|(1<<CS02);
	DDRB=~0;
    while(1)
    {
		if(TCNT0==255)	
  aa:	22 b7       	in	r18, 0x32	; 50
  ac:	2f 3f       	cpi	r18, 0xFF	; 255
  ae:	21 f4       	brne	.+8      	; 0xb8 <main+0x26>
			{
				cnt++;
  b0:	01 96       	adiw	r24, 0x01	; 1
  b2:	a1 1d       	adc	r26, r1
  b4:	b1 1d       	adc	r27, r1
				PORTB|=(1<<5);
  b6:	c5 9a       	sbi	0x18, 5	; 24
				//PORTB=0;
				///delay_ms(5);
			}
			
					
		if(cnt==61)	
  b8:	8d 33       	cpi	r24, 0x3D	; 61
  ba:	91 05       	cpc	r25, r1
  bc:	a1 05       	cpc	r26, r1
  be:	b1 05       	cpc	r27, r1
  c0:	a1 f7       	brne	.-24     	; 0xaa <main+0x18>
		{
			int a=TCNT0;
  c2:	82 b7       	in	r24, 0x32	; 50
			PORTB^=(1<<3);
  c4:	98 b3       	in	r25, 0x18	; 24
  c6:	93 27       	eor	r25, r19
  c8:	98 bb       	out	0x18, r25	; 24
			TCNT0=a;
  ca:	82 bf       	out	0x32, r24	; 50
  cc:	ec cf       	rjmp	.-40     	; 0xa6 <main+0x14>

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
